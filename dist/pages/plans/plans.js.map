{"version":3,"sources":["pages/plans/plans.js"],"names":["app","getApp","useUrl","require","citys","QQMapWX","qqmapsdkkey","qqmapsdk","Page","data","title","day","month","setAdd","city","area","selectBy","selectdata","page","content","showText","selectchoose","e","that","q","currentTarget","dataset","choose","setData","statustwo","engagementLists","select","a","status","reverseGeocoder","obj","success","res","result","ad_info","replace","ifarrow","lat","location","lng","show","unshift","cityall","fail","console","log","wx","showToast","setTimeout","settingObj","authSetting","mask","openSetting","showcitys","icon","cityslist","citydetail","i","push","index","cl","current","showcitydetail","flag","cityone","cancel","choosearea","chooseTime","switchTab","url","type","time","year","month_n","length","session_key","getStorageSync","district","wxrequest","onLoad","key","y","m","m_n","d","onReady","onShow","onHide","onUnload","onPullDownRefresh","onReachBottom"],"mappings":"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","file":"plans.js","sourcesContent":["// 获取全局应用程序实例对象\nconst app = getApp()\nconst useUrl = require('../../utils/service')\nconst citys = require('../../utils/citys')\nconst QQMapWX = require('../../utils/qmapsdk')\nconst qqmapsdkkey = '2D3BZ-2I7WU-F22VV-43SMX-W6Z5K-PDFYQ'\nlet qqmapsdk\n// 创建页面实例对象\nPage({\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    title: 'plans',\n    day: 20,\n    month: 'May',\n    setAdd: true,\n    city: '定位中',\n    area: '定位中',\n    selectBy: '筛选',\n    selectdata: 2,\n    page: 1,\n    content: [],\n    showText: '您所在地区暂时无法提供服务，请点击左上角更换地区。'\n  },\n  // 选择排序方式\n  selectchoose (e) {\n    let that = this\n    let q = e.currentTarget.dataset.choose\n    // console.log(q)\n    if (q === '0') {\n      this.setData({\n        selectBy: '美食'\n      })\n    } else if (q === '1') {\n      this.setData({\n        selectBy: '体验'\n      })\n    }\n    this.setData({\n      selectdata: q,\n      page: 1,\n      statustwo: false,\n      content: []\n    })\n    this.engagementLists(q, that.data.page)\n  },\n  // 排序页面展示\n  select () {\n    let a = this.data.statustwo\n    this.setData({\n      statustwo: !a,\n      status: false\n    })\n  },\n  // 逆地址解析\n  reverseGeocoder () {\n    let that = this\n    let obj = {\n      success (res) {\n        // console.log(res)\n        let city = res.result.ad_info.city\n        city = city.replace('市', '')\n        // console.log(city)\n        // console.log(citys[city])\n        if (!citys[city]) {\n          return that.setData({\n            city: '点击选择城市',\n            ifarrow: true,\n            setAdd: false,\n            lat: res.result.location.lat,\n            lng: res.result.location.lng,\n            area: '',\n            show: true\n          })\n        }\n        if (citys[city][0] !== '附近') {\n          citys[city].unshift('附近')\n        }\n        that.setData({\n          setAdd: false,\n          city: city + '市',\n          cityall: res.result.ad_info.city,\n          lat: res.result.location.lat,\n          lng: res.result.location.lng,\n          area: '附近'\n        })\n        that.engagementLists(2, that.data.page)\n      },\n      fail (res) {\n        console.log(res)\n        wx.showToast({\n          title: '请允许获取您的位置信息'\n        })\n        setTimeout(function () {\n          let settingObj = {\n            success (res) {\n              // console.log(res)\n              // 授权失败\n              if (!res.authSetting['scope.userLocation']) {\n                wx.showToast({\n                  title: '请允许获取您的地理位置信息',\n                  mask: true\n                })\n                setTimeout(function () {\n                  return that.reverseGeocoder()\n                }, 1000)\n              } else {\n                // 授权成功\n                return that.reverseGeocoder()\n              }\n            },\n            fail (res) {\n              console.log(res)\n            }\n          }\n          wx.openSetting(settingObj)\n        }, 1000)\n      }\n    }\n    qqmapsdk.reverseGeocoder(obj)\n  },\n// 城市列表\n  showcitys () {\n    // if (this.data.ifarrow) return\n    if (this.data.setAdd) {\n      return wx.showToast({\n        title: '等待定位',\n        icon: 'loading',\n        mask: 'true'\n      })\n    }\n    if (this.data.status) {\n      return this.setData({\n        cityslist: [],\n        citydetail: [],\n        status: false,\n        statustwo: false\n      })\n    }\n    let cityslist = []\n    for (let i in citys) {\n      cityslist.push(i)\n    }\n    let index = this.data.city === '佛山' ? '0' : this.data.city === '广州' ? '1' : this.data.city === '深圳' ? '2' : '3'\n    // console.log(index);\n    let cl = cityslist[index]\n    console.log(cl)\n    this.setData({\n      cityslist: cityslist,\n      status: true,\n      statustwo: false,\n      current: cl\n    })\n    this.showcitydetail()\n  },\n  // 二级列表\n  showcitydetail (e) {\n    let flag\n    console.log(e)\n    if (!e) {\n      if (this.data.city === '佛山' || this.data.city === '广州' || this.data.city === '深圳' || this.data.city === '北京') {\n        flag = this.data.city\n      } else {\n        flag = '佛山'\n      }\n    } else {\n      flag = e.currentTarget.dataset.city\n    }\n    console.log(flag)\n    let citydetail = citys[flag]\n    this.setData({\n      citydetail: citydetail,\n      current: flag,\n      cityone: flag\n    })\n  },\n  // 背景遮罩层取消\n  cancel () {\n    this.setData({\n      status: false,\n      statustwo: false\n    })\n  },\n  // 选择区域\n  choosearea (e) {\n    let that = this\n    this.setData({\n      cityslist: [],\n      citydetail: [],\n      status: false,\n      current: null,\n      page: 1,\n      content: []\n    })\n    let area = e.currentTarget.dataset.area\n    // console.log(area)\n    let cityone = this.data.cityone\n    this.setData({\n      city: cityone,\n      ifarrow: false,\n      area: area\n    })\n    this.engagementLists(that.data.selectdata, that.data.page)\n  },\n  // 选择时间\n  chooseTime () {\n    wx.switchTab({\n      url: '../index2/index2'\n    })\n  },\n  // 获取约会套餐列表\n  engagementLists (type, page) {\n    let that = this\n    let time = that.data.year + '-' + (that.data.month_n < 10 ? '0' + that.data.month_n : that.data.month_n) + '-' + (that.data.day < 10 ? '0' + that.data.day : that.data.day)\n    let obj = {}\n    if (that.data.area === '附近') {\n      if (that.data.city.length === 2) {\n        that.data.city += '市'\n      }\n      obj = {\n        url: useUrl.engagementLists,\n        data: {\n          session_key: wx.getStorageSync('session_key'),\n          type: type || 2,\n          time: time,\n          city: that.data.city,\n          // district: that.data.area,\n          lng: that.data.lng,\n          lat: that.data.lat,\n          page: page\n        },\n        success (res) {\n          // console.log(res)\n          if (res.data.data.length <= 0) {\n            if (page === 1) {\n              that.setData({\n                show: true\n              })\n            }\n            // return\n            return\n            // wx.showToast({\n            //   title: '暂时没有更多内容啦',\n            //   image: '../../images/jiong.png',\n            //   duration: 700,\n            //   mask: true\n            // })\n          }\n          for (let i of res.data.data) {\n            that.data.content.push(i)\n          }\n          that.setData({\n            show: false,\n            content: that.data.content\n          })\n        }\n      }\n    } else {\n      obj = {\n        url: useUrl.engagementLists,\n        data: {\n          session_key: wx.getStorageSync('session_key'),\n          type: type || 2,\n          time: time,\n          city: `${that.data.city}市`,\n          district: that.data.area,\n          lng: that.data.lng,\n          lat: that.data.lat,\n          page: page\n        },\n        success (res) {\n          // console.log(res)\n          if (res.data.data.length <= 0) {\n            if (page === 1) {\n              that.setData({\n                show: true\n              })\n            }\n            return\n            // wx.showToast({\n            //   title: '没有更多内容啦',\n            //   image: '../../images/jiong.png',\n            //   duration: 1000,\n            //   mask: true\n            // })\n          }\n          for (let i of res.data.data) {\n            that.data.content.push(i)\n          }\n          that.setData({\n            show: false,\n            content: that.data.content\n          })\n        }\n      }\n    }\n    app.wxrequest(obj)\n  },\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad () {\n    qqmapsdk = new QQMapWX({\n      key: qqmapsdkkey\n    })\n    this.reverseGeocoder()\n    let time = wx.getStorageSync('time')\n    this.setData({\n      year: time.y,\n      month: time.m,\n      month_n: time.m_n,\n      day: time.d\n    })\n    // TODO: onLoad\n  },\n\n  /**\n   * 生命周期函数--监听页面初次渲染完成\n   */\n  onReady () {\n    // TODO: onReady\n    // let that = this\n  },\n\n  /**\n   * 生命周期函数--监听页面显示\n   */\n  onShow () {\n    // TODO: onShow\n  },\n\n  /**\n   * 生命周期函数--监听页面隐藏\n   */\n  onHide () {\n    // TODO: onHide\n  },\n\n  /**\n   * 生命周期函数--监听页面卸载\n   */\n  onUnload () {\n    // TODO: onUnload\n  },\n\n  /**\n   * 页面相关事件处理函数--监听用户下拉动作\n   */\n  onPullDownRefresh () {\n    // TODO: onPullDownRefresh\n  },\n  // 页面触底事件\n  onReachBottom () {\n    this.engagementLists(this.data.selectdata, ++this.data.page)\n  }\n})\n"]}